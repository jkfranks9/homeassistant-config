#==============================#
#     Notification Sensors     #
#==============================#

#--------------------------------------------#
#   -- Mobile Notification Tag Registry --   #
#--------------------------------------------#

# We keep a registry of mobile notifications, with the tag as the key and the notification parameters as the data.
- trigger:
    - platform: event
      event_type: register_mobile_tag
  
    - platform: event
      event_type: unregister_mobile_tag
  
  sensor:
    - name: Mobile Tag Registry
      unique_id: mobile_tag_registry
      state: Tags
      
      attributes:
        tags: >
          {% set current = this.attributes.get('tags', {}) %}
          {% if trigger.event.event_type == 'register_mobile_tag' %}
            {% set new = {trigger.event.data.key: trigger.event.data.value} %}
            {{ dict(current, **new) }}
          {% elif trigger.event.event_type == 'unregister_mobile_tag' %}
            {{ dict(current.items() | rejectattr('0', 'eq', trigger.event.data.key)) }}
          {% endif %}

# This sensor just contains the keys for the mobile tag registry. This is used for manual unregistration of tags
# from the UI, and for ease of walking through the registry.
- sensor:
    - name: Mobile Tag Registry Keys
      unique_id: mobile_tag_registry_keys
      state: "{{ this.attributes.tags | length }}"
      
      attributes:
        tags: >
          {% set val = namespace(keys = []) %}
          {% if states('sensor.mobile_tag_registry') != 'unavailable' %}
            {% set val.keys = state_attr('sensor.mobile_tag_registry', 'tags').keys() | list %}
          {% endif %}
          
          {{val.keys}}

# This sensor contains all mobile notifications that can only be cleared manually. It is intended to be used by
# the Remove Manual Mobile Notification script, which in turn is intended to be called by an Alexa routine.
- sensor:
    - name: Mobile Tag Registry Manual Clear
      unique_id: mobile_tag_registry_manual_clear
      state: "{{ this.attributes.tags | length }}"
      
      attributes:
        tags: >
          {% set val = namespace(manual_tags = []) %}
          {% if states('sensor.mobile_tag_registry') != 'unavailable' %}
            {% for tag in state_attr('sensor.mobile_tag_registry', 'tags') %}
              {% set tag_entry = state_attr('sensor.mobile_tag_registry', 'tags').get(tag) %}
              {% if tag_entry[0] == 'manual' %}
                {% set val.manual_tags = val.manual_tags + [tag] %}
              {% endif %}
            {% endfor %}
          {% endif %}
          
          {{val.manual_tags}}
