#========================#
#     Health Sensors     #
#========================#

- sensor:

    #----------------------------#
    #   -- Exercise Overdue --   #
    #----------------------------#
    
    # This is the number and list of overdue exercise types.
    - name: Exercise Overdue
      unique_id: exercise_overdue
      state: "{{ this.attributes.overdue | length }}"
      
      attributes:
        overdue: >
          {% set val = namespace(overdue = []) %}
          {% for type in ['treadmill', 'workout', 'yard_work', 'steps'] %}
            {% set changed = states('sensor.' ~ type ~ '_last_changed') %}
            {% if changed not in ['unknown', 'unavailable'] %}
              {% set delta = now() - strptime(changed, '%Y-%m-%dT%H:%M:%S%z', now()) %}
              {% set hours = (((delta.days * 86400) + delta.seconds) / 3600) | round(0) %}
              {% if hours > 72 %}
                {% set val.overdue = val.overdue + [type] %}
              {% endif %}
            {% endif %}
          {% endfor %}        
          
          {{ val.overdue }}
    
    # This identifies the types of overdue exercises, for the front end.
    - name: Exercise Overdue Types
      unique_id: exercise_overdue_types
      state: >
        {% set val = namespace(types = '') %}
        {% if states('sensor.exercise_overdue') != 'unavailable' %}
          {% for type in state_attr('sensor.exercise_overdue', 'overdue') %}
            {% if loop.first %}
              {% set val.types = val.types ~ type[0] | upper %}
            {% else %}
              {% set val.types = val.types ~ ',' ~ type[0] | upper %}
            {% endif %}
          {% endfor %}
        {% endif %}
        
        {{ val.types }}
