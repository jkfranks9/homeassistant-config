#========================#
#     Health Sensors     #
#========================#

- sensor:

    #---------------------------------#
    #   -- Total Calories Burned --   #
    #---------------------------------#
    
    - name: 'Total Daily Calories'
      unique_id: total_daily_calories
      unit_of_measurement: 'Kcal'
      state: "{{ (states('input_number.treadmill_daily_calories') | float(0) +
                  states('input_number.yard_work_daily_calories') | float(0) +
                  states('input_number.workout_daily_calories') | float(0) +
                  states('input_number.steps_daily_calories') | float(0)) | round(2) }}"
    
    - name: 'Total Weekly Calories'
      unique_id: total_weekly_calories
      unit_of_measurement: 'Kcal'
      state: "{{ (states('input_number.treadmill_weekly_calories') | float(0) +
                  states('input_number.yard_work_weekly_calories') | float(0) +
                  states('input_number.workout_weekly_calories') | float(0) +
                  states('input_number.steps_weekly_calories') | float(0)) | round(2) }}"
    
    - name: 'Total Monthly Calories'
      unique_id: total_monthly_calories
      unit_of_measurement: 'Kcal'
      state: "{{ (states('input_number.treadmill_monthly_calories') | float(0) +
                  states('input_number.yard_work_monthly_calories') | float(0) +
                  states('input_number.workout_monthly_calories') | float(0) +
                  states('input_number.steps_monthly_calories') | float(0)) | round(2) }}"

    #-------------------------------#
    #   -- Total Exercise Time --   #
    #-------------------------------#
    
    - name: 'Total Daily Time'
      unique_id: total_daily_time
      unit_of_measurement: 'm'
      state: "{{ (states('input_number.treadmill_daily_time') | float(0) +
                  states('input_number.yard_work_daily_time') | float(0) +
                  states('input_number.workout_daily_time') | float(0)) | round(2) }}"
    
    - name: 'Total Weekly Time'
      unique_id: total_weekly_time
      unit_of_measurement: 'm'
      state: "{{ (states('input_number.treadmill_weekly_time') | float(0) +
                  states('input_number.yard_work_weekly_time') | float(0) +
                  states('input_number.workout_weekly_time') | float(0)) | round(2) }}"
    
    - name: 'Total Monthly Time'
      unique_id: total_monthly_time
      unit_of_measurement: 'm'
      state: "{{ (states('input_number.treadmill_monthly_time') | float(0) +
                  states('input_number.yard_work_monthly_time') | float(0) +
                  states('input_number.workout_monthly_time') | float(0)) | round(2) }}"

    #----------------------------#
    #   -- Exercise History --   #
    #----------------------------#
      
    # These sensors use a number to contain a bitmask that represents the days of the week. The reusable template
    # uses the bitwise_and operator to walk through the bits and count the days.
    
    - name: 'Weekly Treadmill Total'
      unique_id: weekly_treadmill_total
      icon: mdi:run
      
      state: >
        {% from 'utilities.jinja' import count_number_bits_8 %}
        {{ count_number_bits_8('input_number.treadmill_days') }}
    
    - name: 'Weekly Workout Total'
      unique_id: weekly_workout_total
      icon: mdi:weight-lifter
      
      state: >
        {% from 'utilities.jinja' import count_number_bits_8 %}
        {{ count_number_bits_8('input_number.workout_days') }}
    
    - name: 'Weekly Yard Work Total'
      unique_id: weekly_yard_work_total
      icon: mdi:shovel
      
      state: >
        {% from 'utilities.jinja' import count_number_bits_8 %}
        {{ count_number_bits_8('input_number.yard_work_days') }}
    
    - name: 'Weekly Steps Total'
      unique_id: weekly_steps_total
      icon: mdi:walk
      
      state: >
        {% from 'utilities.jinja' import count_number_bits_8 %}
        {{ count_number_bits_8('input_number.steps_days') }}

    #----------------------------#
    #   -- Exercise Overdue --   #
    #----------------------------#
    
    # This is the number and list of overdue exercise types.
    - name: Exercise Overdue
      unique_id: exercise_overdue
      state: "{{ this.attributes.overdue | length }}"
      
      attributes:
        overdue: >
          {% set val = namespace(overdue = []) %}
          {% for type in ['treadmill', 'workout', 'yard_work', 'steps'] %}
            {% set changed = states('sensor.' ~ type ~ '_last_changed') %}
            {% if changed not in ['unknown', 'unavailable'] %}
              {% set delta = now() - strptime(changed, '%Y-%m-%dT%H:%M:%S%z', now()) %}
              {% set hours = (((delta.days * 86400) + delta.seconds) / 3600) | round(0) %}
              {% if hours > 72 %}
                {% set val.overdue = val.overdue + [type] %}
              {% endif %}
            {% endif %}
          {% endfor %}        
          
          {{ val.overdue }}

    #--------------------------#
    #   -- Workout Header --   #
    #--------------------------#
    
    # This supplies a state header for the UI exercise status. 
    - name: Workout State Header
      unique_id: workout_state_header
      state: "{{ 'G' ~ states('input_number.workout_group') | int(0) }}"
