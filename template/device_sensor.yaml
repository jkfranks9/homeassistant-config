#========================#
#     Device Sensors     #
#========================#

#---------- Trigger Sensors ----------#

#----------------------#
#   -- Last Alexa --   #
#----------------------#

# The state of this sensor is the most recent Alexa device spoken to. Useful for room-awareness. We use a trigger to update the sensor
# since it appears none of the media player entities change state when the Alexa Media Player update_last_called service is invoked.
# Obviously attributes are updated but not the state, so after we call the update_last_called service we issue the event that triggers
# this sensor. 
- trigger:
    - platform: event
      event_type: update_last_alexa_sensor
    
  sensor:
    - name: Last Alexa
      unique_id: last_alexa
      state: >
        {{ expand(integration_entities('alexa_media') | select('search', 'media_player'))
         | selectattr('attributes.last_called', 'eq', True) | map(attribute = 'entity_id') | first }}

#---------- Normal Sensors ----------#

- sensor:

    #--------------------------------------#
    #   -- Zigbee Unavailable Devices --   #
    #--------------------------------------#
    
    # Current list of unavailable zigbee device friendly names. This is updated whenever a device becomes unavailable, or has not been heard
    # from in a while. The state is a count of all such devices.
    - name: 'Current Zigbee Unavailable Devices'
      unique_id: current_zigbee_unavailable_devices
      state: "{{ this.attributes.device_list | length }}"
      
      attributes:
        device_list: >
          {# --List of devices that don't make contact for many hours-- #}
          {% set skip_time_check_entities = ['switch.hall_light', 'switch.dining_table_light', 'switch.master_vanity_light'] %}
          
          {# --List of device entities, associated last seen sensors-- #}
          {% set device_list = [
                                ['binary_sensor.back_door_sensor_contact', 'sensor.back_door_sensor_last_seen'],
                                ['binary_sensor.studio_window_sensor_contact', 'sensor.studio_window_sensor_last_seen'],
                                ['binary_sensor.studio_motion_detector_occupancy', 'sensor.studio_motion_detector_last_seen'],
                                ['binary_sensor.laundry_room_motion_detector_occupancy', 'sensor.laundry_room_motion_detector_last_seen'],
                                ['binary_sensor.master_bath_motion_detector_occupancy', 'sensor.master_bath_motion_detector_last_seen'],
                                ['cover.master_br_vent_1', 'sensor.master_br_vent_1_last_seen'],
                                ['cover.master_br_vent_2', 'sensor.master_br_vent_2_last_seen'],
                                ['binary_sensor.cc2530_router_led', 'sensor.cc2530_router_last_seen'],
                                ['switch.sonoff_router', 'sensor.sonoff_router_last_seen'],
                                ['binary_sensor.office_human_sensor_presence', 'sensor.office_human_sensor_last_seen'],
                                ['switch.hall_light', 'sensor.hall_light_last_seen'],
                                ['switch.dining_table_light', 'sensor.dining_table_light_last_seen'],
                                ['switch.master_vanity_light', 'sensor.master_vanity_light_last_seen'],
                                ['binary_sensor.master_closet_sensor_contact', 'sensor.master_closet_sensor_last_seen'],
                                ['binary_sensor.attic_door_sensor_contact', 'sensor.attic_door_sensor_last_seen'],
                                ['binary_sensor.upstairs_entry_sensor_contact', 'sensor.upstairs_entry_sensor_last_seen']
                               ] %}
                               
          {# --Create an empty list to start-- #}
          {% set unavail_device_list = namespace(list = []) %}
          
          {# --Walk through all devices-- #}
          {% for device in device_list %}
          
            {# --Set variables-- #}
            {% set device_entity = device[0] %}
            {% set sensor_entity = device[1] %}
            {% set timeout_minutes = 150 %}
          
            {# --Add a device to the list if the device entity is unavailable, or hasn't been seen in the timeout window-- #}
            {% if states(device_entity) in ['unknown', 'unavailable']
                  or (device_entity not in skip_time_check_entities and as_timestamp(now(), 0) - as_timestamp(states(sensor_entity), 0) > (timeout_minutes * 60)) %}
              {% set unavail_device_list.list = unavail_device_list.list + [state_attr(device_entity, 'friendly_name')] %}
            {% endif %}
          {% endfor %}
          
          {{ unavail_device_list.list }}
    
    # Previous list of unavailable zigbee device friendly names. This allows us to detect which of a list of unavailable devices is new when the 
    # Notify Zigbee Device Unavailable automation runs. The state is a count of all such devices.
    - name: 'Previous Zigbee Unavailable Devices'
      unique_id: previous_zigbee_unavailable_devices
      state: "{{ this.attributes.device_list | length }}"
      
      attributes:
        device_list: >
          {# --List of timestamp entities-- #}
          {% set device_list = [
                                'input_number.back_door_sensor_door',
                                'input_number.studio_window_sensor_door',
                                'input_number.studio_motion_detector_occupancy',
                                'input_number.laundry_room_motion_detector_occupancy',
                                'input_number.master_bath_motion_detector_occupancy',
                                'input_number.master_br_vent_1',
                                'input_number.master_br_vent_2',
                                'input_number.cc2530_router_led',
                                'input_number.sonoff_router',
                                'input_number.office_human_sensor_presence',
                                'input_number.hall_light',
                                'input_number.dining_table_light',
                                'input_number.master_vanity_light',
                                'input_number.master_closet_sensor_door',
                                'input_number.attic_door_sensor_door',
                                'input_number.upstairs_entry_sensor_door'
                               ] %}
                               
          {# --Create an empty list to start-- #}
          {% set unavail_device_list = namespace(list = []) %}
          
          {# --Walk through all devices-- #}
          {% for timestamp_entity in device_list %}
          
            {# --Add a device to the list if the device timestamp is not 0-- #}
            {% if states(timestamp_entity) | int(0) > 0 %}
              {% set unavail_device_list.list = unavail_device_list.list + [state_attr(timestamp_entity, 'friendly_name')] %}
            {% endif %}
          {% endfor %}
          
          {{ unavail_device_list.list }}

    #------------------------------------#
    #   -- Echo Unavailable Devices --   #
    #------------------------------------#
    
    # Current list of unavailable echo device friendly names. This is updated whenever a device becomes unavailable. 
    # The state is a count of all such devices.
    - name: 'Current Echo Unavailable Devices'
      unique_id: current_echo_unavailable_devices
      state: "{{ this.attributes.device_list | length }}"
      
      attributes:
        device_list: >
          {# --List of device entities-- #}
          {% set device_list = [
                                'media_player.family_room_echo',
                                'media_player.master_bedroom_echo',
                                'media_player.office_echo',
                                'media_player.penthouse_echo',
                                'media_player.studio_echo',
                                'media_player.theater_echo'
                               ] %}
                               
          {# --Create an empty list to start-- #}
          {% set unavail_device_list = namespace(list = []) %}
              
          {# --Walk through all devices-- #}
          {% for device_entity in device_list %}
              
            {# --Add a device to the list if the device entity is unavailable-- #}
            {% if states(device_entity) in ['unknown', 'unavailable'] %}
              {% set unavail_device_list.list = unavail_device_list.list + [state_attr(device_entity, 'friendly_name')] %}
            {% endif %}
          {% endfor %}
              
          {{ unavail_device_list.list }}
    
    # Previous list of unavailable echo device friendly names. This allows us to detect which of a list of unavailable devices is new when the 
    # Notify Echo Device Unavailable automation runs. The state is a count of all such devices.
    - name: 'Previous Echo Unavailable Devices'
      unique_id: previous_echo_unavailable_devices
      state: "{{ this.attributes.device_list | length }}"
      
      attributes:
        device_list: >
          {# --List of timestamp entities-- #}
          {% set device_list = [
                                'input_number.family_room_echo',
                                'input_number.master_bedroom_echo',
                                'input_number.office_echo',
                                'input_number.penthouse_echo',
                                'input_number.studio_echo',
                                'input_number.theater_echo'
                               ] %}
                               
          {# --Create an empty list to start-- #}
          {% set unavail_device_list = namespace(list = []) %}
          
          {# --Walk through all devices-- #}
          {% for timestamp_entity in device_list %}
          
            {# --Add a device to the list if the device timestamp is not 0-- #}
            {% if states(timestamp_entity) | int(0) > 0 %}
              {% set unavail_device_list.list = unavail_device_list.list + [state_attr(timestamp_entity, 'friendly_name')] %}
            {% endif %}
          {% endfor %}
          
          {{ unavail_device_list.list }}
