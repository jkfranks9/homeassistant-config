#===============================================#
#     Ecobee Thermostat Preset Mode Control     #
#===============================================#

# Ecobee climate/preset modes:
#
#   - climate_mode: This is the mode as determined by the schedule for the thermostat (first character always uppercase).
#                   For example
#                     - 'Sleep' 11:00 PM -  7:30 AM
#                     - 'Away'   7:30 AM -  5:00 PM
#                     - 'Home'   5:00 PM - 11:00 PM
#   - preset_mode:  This is normally the same value as climate_mode. But in Smart Home and Smart Away conditions,
#                   it changes to 'home' or 'away' (first character lowercase). Confusingly, it also can be 'Vacation' for
#                   a scheduled vacation, even though that value cannot be assigned as a climate or preset mode.

#===== Transition from Home to Sleep mode upstairs if the cinema is not in use =====#

# Transition to Sleep mode.
- alias: Transition To Sleep Mode
  id: transition_to_sleep_mode
  trigger:
    - platform: time
      at: '20:00:00'
  condition:
    - condition: state
      entity_id: binary_sensor.cinema_projector
      state: 'off'
    - condition: state
      entity_id: input_boolean.extended_away_mode
      state: 'off'
  action:
    - service: climate.set_preset_mode
      target:
        entity_id: climate.upstairs
      data:
        preset_mode: 'Sleep'

#============================#
#     Extended Away Mode     #
#============================#

# Triggered on the start of an extended away period.
- alias: Enable Extended Away Mode
  id: enable_extended_away_mode
  
  trigger:
    - platform: time
      at: input_datetime.extended_away_start
  
  action:
    
    # Turn on extended away mode.
    - service: input_boolean.turn_on
      entity_id: input_boolean.extended_away_mode
    
    # Create thermostat vacations.
    - service: script.create_thermostat_vacation
      data:
        thermostat_entity: climate.downstairs
        frontend_entity: input_select.downstairs_ecobee_preset_mode
        control_flag: input_boolean.downstairs_ecobee_preset_mode_triggered
    
    - service: script.create_thermostat_vacation
      data:
        thermostat_entity: climate.upstairs
        frontend_entity: input_select.upstairs_ecobee_preset_mode
        control_flag: input_boolean.upstairs_ecobee_preset_mode_triggered

# Triggered on the end of an extended away period.
- alias: Disable Extended Away Mode
  id: disable_extended_away_mode
  
  trigger:
    - platform: time
      at: input_datetime.extended_away_end
  
  action:
    
    # Turn off extended away mode.
    - service: input_boolean.turn_off
      entity_id: input_boolean.extended_away_mode
    
    # Remove thermostat vacations.
    - service: script.remove_thermostat_vacation
      data:
        thermostat_entity: climate.downstairs
        frontend_entity: input_select.downstairs_ecobee_preset_mode
        control_flag: input_boolean.downstairs_ecobee_preset_mode_triggered
    
    - service: script.remove_thermostat_vacation
      data:
        thermostat_entity: climate.upstairs
        frontend_entity: input_select.upstairs_ecobee_preset_mode
        control_flag: input_boolean.upstairs_ecobee_preset_mode_triggered

#============================================#
#     Temperature High / Low Water Marks     #
#============================================#

# Attic temperatures.
- alias: Set Minimum Attic Temperature
  id: set_minimum_attic_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.attic_temp_min
      result_entity: input_number.min_attic_temp
      type: Min

- alias: Set Maximum Attic Temperature
  id: set_maximum_attic_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.attic_temp_max
      result_entity: input_number.max_attic_temp
      type: Max

# Outdoor temperatures.
- alias: Set Minimum Outdoor Temperature
  id: set_minimum_outdoor_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.porch_temp_min
      result_entity: input_number.min_outdoor_temp
      type: Min

- alias: Set Maximum Outdoor Temperature
  id: set_maximum_outdoor_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.porch_temp_max
      result_entity: input_number.max_outdoor_temp
      type: Max