#===============================================#
#     Ecobee Thermostat Preset Mode Control     #
#===============================================#

# Ecobee climate/preset modes:
#
#   - climate_mode: This is the mode as determined by the schedule for the thermostat (first character always uppercase).
#                   For example
#                     - 'Sleep' 11:00 PM -  7:30 AM
#                     - 'Away'   7:30 AM -  5:00 PM
#                     - 'Home'   5:00 PM - 11:00 PM
#   - preset_mode:  This is normally the same value as climate_mode. But in Smart Home and Smart Away conditions,
#                   it changes to 'home' or 'away' (first character lowercase). Confusingly, it also can be 'Vacation' for
#                   a scheduled vacation, even though that value cannot be assigned as a climate or preset mode.

# Transition from Home to Sleep mode upstairs if the cinema is not in use, and extended away is not active
# (extended away controls the thermostats).
- alias: Transition To Sleep Mode
  id: transition_to_sleep_mode
  
  trigger:
    - platform: time
      at: '20:00:00'
  
  condition:
    - condition: state
      entity_id: sensor.harmony_hub
      state: 'PowerOff'
    
    - condition: state
      entity_id: input_boolean.extended_away_mode
      state: 'off'
  
  action:
    - service: script.set_thermostat_preset
      data:
        thermostat_entity: climate.upstairs
        preset: 'sleep'

# Catch an unexpected transition away from vacation mode. If the upstairs bedroom is occupied, this should not happen.
# So put the vacation hold back on, and log it.
- alias: Catch Vacation Drop
  id: catch_vacation_drop
  
  trigger:
    - platform: state
      entity_id: climate.upstairs
      attribute: preset_mode
      from:
        - 'temp'
        - 'vacation'
      not_to:
        - 'temp'
        - 'vacation'
  
  condition:
    - condition: state
      entity_id: binary_sensor.penthouse_occupied
      state: 'on'
  
  action:
    - service: script.set_temporary_thermostat_hold
      data:
        thermostat_entity: climate.upstairs
        heat_temp: "{{ state_attr('sensor.variables', 'variables').upstairs_home_heat_temp }}"
        cool_temp: "{{ state_attr('sensor.variables', 'variables').upstairs_home_cool_temp }}"
        days: 7
    
    - service: system_log.write
      data:
        message: "Upstairs thermostat unexpectedly transitioned from {{ trigger.from_state.attributes.preset_mode }} to {{ trigger.to_state.attributes.preset_mode }}; resetting back to vacation mode."
        level: error

#============================================#
#     Temperature High / Low Water Marks     #
#============================================#

# Attic temperatures.
- alias: Set Minimum Attic Temperature
  id: set_minimum_attic_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.attic_temp_min
      result_entity: input_number.min_attic_temp
      type: Min

- alias: Set Maximum Attic Temperature
  id: set_maximum_attic_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.attic_temp_max
      result_entity: input_number.max_attic_temp
      type: Max

# Garage temperatures.
- alias: Set Minimum Garage Temperature
  id: set_minimum_garage_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.garage_temp_min
      result_entity: input_number.min_garage_temp
      type: Min

- alias: Set Maximum Garage Temperature
  id: set_maximum_garage_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.garage_temp_max
      result_entity: input_number.max_garage_temp
      type: Max

# Outdoor temperatures.
- alias: Set Minimum Outdoor Temperature
  id: set_minimum_outdoor_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.porch_temp_min
      result_entity: input_number.min_outdoor_temp
      type: Min

- alias: Set Maximum Outdoor Temperature
  id: set_maximum_outdoor_temperature
  use_blueprint:
    path: climate/temp_extremes.yaml
    input:
      sensor_entity: sensor.porch_temp_max
      result_entity: input_number.max_outdoor_temp
      type: Max

#========================#
#     Door & Windows     #
#========================#

# Turn off the downstairs HVAC system when any downstairs doors or windows are opened.
- alias: Turn Off Downstairs HVAC
  id: turn_off_downstairs_hvac
  
  trigger:
    - platform: state
      entity_id: binary_sensor.downstairs_doors_windows
      from: 'off'
      to: 'on'
      for: '00:02:00'

  action:
    - service: climate.turn_off
      target:
        entity_id: climate.downstairs

# Turn on the downstairs HVAC system when all downstairs doors and windows are closed.
- alias: Turn On Downstairs HVAC
  id: turn_on_downstairs_hvac
  
  trigger:
    - platform: state
      entity_id: binary_sensor.downstairs_doors_windows
      from: 'on'
      to: 'off'

  condition:
    - condition: state
      entity_id: climate.downstairs
      state: 'off'
  
  action:
    - service: climate.turn_on
      target:
        entity_id: climate.downstairs
