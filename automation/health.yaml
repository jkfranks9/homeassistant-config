#===========================#
#     Calories History      #
#===========================#

# Save the monthly calories used to maintain a history for the front end.
- alias: Save Monthly Calories
  id: 'save_monthly_calories'
  
  # Trigger when the total monthly calories sensor changes.
  trigger:
    - platform: state
      entity_id: sensor.total_monthly_calories
    
  # This should ensure we are actually changing from a valid state, and not just triggering because
  # the current value is 0, and that's it's the first day of the month.
  condition:
    - condition: template
      value_template: "{{ now().day == 1 }}"
    - condition: template
      value_template: "{{ trigger.from_state and trigger.from_state.state | float(0) > 0.0 }}"
  
  # Determine the previous month using the 'from' state's last changed value.
  variables:
    month: "{{ as_timestamp(strptime(trigger.from_state.last_changed.strftime('%Y-%m-%d %H:%M:%S.%f'), '%Y-%m-%d %H:%M:%S.%f')) | timestamp_custom('%b') | lower() }}"
  
  action:
    - service: system_log.write
      data:
        message: "calories from state last changed: '{{ trigger.from_state.last_changed }}'"
        level: info
    
    # Set the correct history value using the month variable to complete the target entity ID.
    - service: input_number.set_value
      target:
        entity_id: "input_number.calories_curr_year_{{ month }}"
      data:
        value: "{{ trigger.from_state.state | float(0) }}"
    
    # If we've started a new year (previous month is December), copy the current year's history to the previous year.
    # We only keep two year's worth of history.
    - if:
        - condition: template
          value_template: "{{ month == 'dec' }}"
      
      then:
        - variables:
            months:
              - jan
              - feb
              - mar
              - apr
              - may
              - jun
              - jul
              - aug
              - sep
              - oct
              - nov
              - dec
    
        # Repeat for all months.
        - repeat:
            count: 12
            
            sequence:
              
              # Copy the current year value to the previous year for the corresponding month.
              - service: input_number.set_value
                target:
                  entity_id: "input_number.calories_prev_year_{{ months[repeat.index-1] }}"
                data:
                  value: "{{ states('input_number.calories_curr_year_' + months[repeat.index-1]) }}"
              
              # Rest the current year value to zero.
              - service: input_number.set_value
                target:
                  entity_id: "input_number.calories_curr_year_{{ months[repeat.index-1] }}"
                data:
                  value: 0

#==========================#
#     Manual Exercise      #
#==========================#

# Set yard work calories.
- alias: Set Yard Work Calories
  id: 'set_yard_work_calories'
  use_blueprint:
    path: health/calories_calculator.yaml
    input:
      time_entity: input_number.yard_work_time
      calories_entity: input_number.yard_work_calories
      calorie_rate: 250

# Set weight training calories.
- alias: Set Weight Training Calories
  id: 'set_weight_training_calories'
  use_blueprint:
    path: health/calories_calculator.yaml
    input:
      time_entity: input_number.weight_training_time
      calories_entity: input_number.weight_training_calories
      calorie_rate: 200
