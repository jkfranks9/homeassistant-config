#======================#
#     Common Stuff     #
#======================#

# This applies to almost all buttons.
common:
  show_icon: true
  show_name: true
  show_state: true
  size: 30%

#===================#
#     Container     #
#===================#

# Used as a container for groups of other buttons.
container:  
  styles:
    card:
      - padding: 0
    
    grid:
      - grid-template-areas: '"buttons"'
      - grid-template-columns: 1fr
      - grid-template-rows: 1fr
    
    custom_fields:
      buttons:
        - margin: 0
        - padding: 0.15em

#=======================#
#     Toggle Button     #
#=======================#

toggle_button:
  template: common
  
  tap_action:
    action: toggle

#======================#
#     Input Button     #
#======================#

# Used for buttons that provide input information.
input_button:
  template: common
  
  show_icon: false
  
  tap_action:
    action: more-info
  
  state:
    - value: 0
      color: var(--paper-item-icon-color)
    
    - value: 'none'
      color: var(--paper-item-icon-color)
    
    - operator: default
      color: var(--paper-item-icon-active-color)

#============================#
#     Garage Door Button     #
#============================#

garage_door_button:
  template: common
  
  variables:
    var_entity: ''
    var_name: ''
  
  show_state: false
  icon: 'hass:garage'
  size: 40%
  
  tap_action:
    action: call-service
    service: switch.turn_on
    service_data:
      entity_id: '[[[ return variables.var_entity ]]]'
  
  state:
    - value: 'off'
      name: '[[[ return variables.var_name ]]]'
      icon: 'hass:garage-open'
      color: var(--paper-item-icon-active-color)
    
    - value: 'on'
      name: '[[[ return variables.var_name ]]]'
      color: var(--paper-item-icon-color)

#==============================#
#     Door / Window Button     #
#==============================#

door_window_button:
  template: common
  
  variables:
    var_name: ''
    var_icon_prefix: ''
  
  show_state: false
  size: 40%
  
  tap_action:
    action: none
  
  state:
    - value: 'on'
      name: '[[[ return variables.var_name ]]]'
      icon: '[[[ return variables.var_icon_prefix + "-open" ]]]'
      color: var(--paper-item-icon-active-color)
    
    - value: 'off'
      name: '[[[ return variables.var_name ]]]'
      icon: '[[[ return variables.var_icon_prefix + "-closed" ]]]'
      color: var(--paper-item-icon-color)

#===========================#
#     Satellite Buttons     #
#===========================#

satellite_pass:
  show_label: false
  styles:
    card:
      - width: 250px
      - height: 100%
    grid:
      - grid-template-areas: '"n date" "i time" "i duration"'
      - grid-template-columns: 1fr 1fr
      - grid-template-rows: min-content min-content min-content
    name:
      - align-self: start
      - justify-self: center
      - font-weight: bold
    icon:
      - width: 40px
    custom_fields:
      date:
        - align-self: start
        - justify-self: start
        - font-size: 14px
      time:
        - align-self: start
        - justify-self: start
        - font-size: 14px
      duration:
        - align-self: start
        - justify-self: start
        - font-size: 14px
      startdir:
        - align-self: start
        - justify-self: start
        - font-size: 14px
      enddir:
        - align-self: start
        - justify-self: start
        - font-size: 14px
  custom_fields:
    date: |
      [[[
        var passdate = new Date(entity.attributes.pass_start_unix * 1000);
        var options = { year: 'numeric', month: 'short', day: 'numeric' };
        return new Intl.DateTimeFormat('en-US', options).format(passdate);
      ]]]
    time: |
      [[[
        var passdate = new Date(entity.attributes.pass_start_unix * 1000);
        var options = { hour: '2-digit', minute: '2-digit' };
        return new Intl.DateTimeFormat('en-US', options).format(passdate);
      ]]]
    duration: |
      [[[
        return entity.state + " seconds"
      ]]]

satellite_compass:
  show_icon: false
  show_name: false
  styles:
    grid:
      - grid-template-areas: '"path"'
      - grid-template-columns: 1fr
      - grid-template-rows: min-content
    custom_fields:
      path:
        - align-self: start
        - font-size: 14px
  custom_fields:
    path: |
      [[[
        return entity.attributes.start_compass + " > " + entity.attributes.end_compass
      ]]]

#=====================#
#     Base Button     #
#=====================#

# This contains common configuration for the other templates below.
base_button:
  template: common
    
  styles:
    card:
      - background-color: var(--card-background-color)
      - padding: 18px 2px 5px 2px
      - display: flex
      #- border: 1px solid gray
      - margin-right: 1px
    
    grid:
      - display: contents
    
    img_cell:
      - display: contents
    
    name:
      - color: var(--primary-text-color)
      - font-size: 0.75em
      - position: absolute
      - top: 0
      - left: 2
      - z-index: 2

#============================#
#     Environment Button     #
#============================#

# This is a base template for use by other templates that deal with environmental controls/sensors.
environment_button:
  template: base_button
  
  variables:
    humidity_entity: ''  
    
  state:
    - id: value_any
      operator: '!='
      value: all
      spin: true
  
  styles:    
    icon:
      - width: 90%
      - height: 70%
      - position: absolute
      - color: var(--state-active-color)
    
    state:
      - font-size: 280%
      - margin-top: '-10px'
      - margin-bottom: '4px'
      - color: var(--primary-text-color)
      - z-index: 1
    
    custom_fields:        
      humidity:
        - position: absolute
        - bottom: 0
        - left: 0
        - display: flex
        - z-index: 2
      
      low:
        - position: absolute
        - bottom: 0
        - right: 5
        - z-index: 1
        
      high:
        - position: absolute
        - bottom: 0
        - right: 0
        - z-index: 1
  
  custom_fields:
    humidity:
      card:
        type: 'custom:button-card'
        show_icon: true
        icon: 'mdi:water-percent'
        show_name: false
        show_state: true
        
        state_display: |
          [[[
            return Math.round(states[variables.humidity_entity].state).toString();
          ]]]
        
        styles:
          grid:
            - grid-template-areas: '"s i"'
          
          img_cell:
            - display: contents
          
          state:
            - color: 'var(--text-primary-color)'
            - font-size: 70%
            - align-self: flex-end
          
          card:
            - padding: 0
            - padding-left: 2px
            - background-color: 'var(--dark-primary-color)'
          
          icon:
            - color: 'var(--text-primary-color)'
            - width: 18px
            - height: 15px
            - margin: -4px -3px 0 -4px
    low:
      card:
        type: 'custom:button-card'
        show_icon: false
        show_name: false
        show_state: true
        
        styles:
          state:
            - font-size: 70%
            - color: var(--text-primary-color)
          
          card:
            - padding: 0 2px
            - background-color: var(--dark-primary-color)
    
    high:
      card:
        type: 'custom:button-card'
        show_icon: false
        show_name: false
        show_state: true
        
        styles:
          state:
            - font-size: 70%
            - color: var(--text-primary-color)
          
          card:
            - padding: 0 2px
            - background-color: var(--dark-primary-color)

#============================#
#     Temperature Button     #
#============================#

temperature_button:
  template: environment_button
  
  variables:
    min_entity: ''
    max_entity: ''
    
  show_icon: false
  
  state_display: |-
    [[[
      if (entity.state < 100)
        return Math.round(entity.state).toString() + "°"
      else
        return Math.round(entity.state).toString()
    ]]]
    
  custom_fields:
    low:
      card:
        type: 'custom:button-card'
        
        state_display: |
          [[[ 
            return Math.round(states[variables.min_entity].state).toString() + "°";
          ]]]
      
    high:
      card:
        type: 'custom:button-card'
        
        state_display: |
          [[[ 
            return Math.round(states[variables.max_entity].state).toString() + "°";
          ]]]
