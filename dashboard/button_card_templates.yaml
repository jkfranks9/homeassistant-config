#===================#
#     Container     #
#===================#

# Used as a container for groups of other buttons.
container:  
  styles:
    card:
      - padding: 0
    
    grid:
      - grid-template-areas: '"buttons"'
      - grid-template-columns: 1fr
      - grid-template-rows: 1fr
    
    custom_fields:
      buttons:
        - margin: 0
        - padding: 0.15em

#=======================#
#     Toggle Button     #
#=======================#

toggle_button:
  show_icon: true
  show_name: true
  
  tap_action:
    action: toggle

#=====================#
#     Info Button     #
#=====================#

info_button:
  show_icon: true
  show_name: true
  show_state: true
  
  state_display: |
    [[[
      if (entity.state == 'on')
        return 'Home';
      else if (entity.state == 'off')
        return 'Away';
    ]]]
  
  tap_action:
    action: 'none'
  
  state:
    - value: 'not_home'
      color: var(--paper-item-icon-color)
    
    - value: 'off'
      color: var(--paper-item-icon-color)
    
    - value: 'home'
      color: var(--paper-item-icon-active-color)
    
    - value: 'on'
      color: var(--paper-item-icon-active-color)
    
    - operator: default
      color: var(--accent-color)

#============================#
#     Garage Door Button     #
#============================#

garage_door_button:
  variables:
    var_entity: ''
    var_name: ''
  
  show_icon: true
  show_name: true
  icon: 'hass:garage'
  size: 40%
  
  tap_action:
    action: call-service
    service: switch.turn_on
    service_data:
      entity_id: '[[[ return variables.var_entity ]]]'
  
  state:
    - value: 'off'
      name: '[[[ return variables.var_name ]]]'
      icon: 'hass:garage-open'
      color: var(--paper-item-icon-active-color)
    
    - value: 'on'
      name: '[[[ return variables.var_name ]]]'
      color: var(--paper-item-icon-color)

#==============================#
#     Door / Window Button     #
#==============================#

door_window_button:
  variables:
    var_name: ''
    var_icon_prefix: ''
  
  show_icon: true
  show_name: true
  size: 40%
  
  tap_action:
    action: none
  
  state:
    - value: 'on'
      name: '[[[ return variables.var_name ]]]'
      icon: '[[[ return variables.var_icon_prefix + "-open" ]]]'
      color: var(--paper-item-icon-active-color)
    
    - value: 'off'
      name: '[[[ return variables.var_name ]]]'
      icon: '[[[ return variables.var_icon_prefix + "-closed" ]]]'
      color: var(--paper-item-icon-color)

#============================#
#     Light Group Button     #
#============================#

light_group_button:
  variables:
    entities_title: ''
    entities_group: ''
  
  show_icon: true
  show_name: true
  
  tap_action:
    action: fire-dom-event
    browser_mod:
      service: script.popup_light_group
      data:
        browser_id: THIS
        title: '[[[ return variables.entities_title ]]]'
        light_group: '[[[ return variables.entities_group ]]]'
  
  state:
    - value: 'on'
      icon: mdi:home-lightbulb
    
    - value: 'off'
      icon: mdi:home-lightbulb-outline

#=======================#
#     Motion Button     #
#=======================#

motion_button:
  show_icon: true
  show_name: true
  
  tap_action:
    action: 'none'
  
  state:
    - value: 'on'
      icon: mdi:motion-sensor
    
    - value: 'off'
      icon: mdi:motion-sensor-off

#===========================#
#     Thermostat Button     #
#===========================#

thermostat_button:
  template: environment_button
    
  icon: 'mdi:fan'
  
  state_display: |-
    [[[ 
      return Math.round(entity.attributes.current_temperature).toString()+"°" 
    ]]]
    
  styles:
    icon:
      - left: 3px
      - display: >-
          [[[ return entity.attributes.fan &&
          entity.attributes.fan === 'on' ? "block" : "none" ]]]
      
    custom_fields:
      low:
        - position: absolute
        - bottom: 0
        - right: 5
        - z-index: 1
        
      high:
        - position: absolute
        - bottom: 0
        - right: 0
        - z-index: 1
    
  custom_fields:
    low:
      card:
        type: 'custom:button-card'
        show_icon: false
        show_name: false
        show_state: true
        
        state_display: |
          [[[
            return entity.attributes.target_temp_low
                ? entity.attributes.target_temp_low + "°" 
                : ''
          ]]]
        
        styles:
          state:
            - font-size: 70%
            - color: var(--disabled-text-color)
          
          card:
            - padding: 0 2px
            - background-color: var(--bar-low-color)
    
    high:
      card:
        type: 'custom:button-card'
        show_icon: false
        show_name: false
        show_state: true
        
        state_display: |
          [[[
            return entity.attributes.target_temp_high
                ? entity.attributes.target_temp_high + "°" 
                : ''
          ]]]
        
        styles:
          state:
            - font-size: 70%
            - color: var(--disabled-text-color)
          
          card:
            - padding: 0 2px
            - background-color: var(--bar-low-color)

#============================#
#     Temperature Button     #
#============================#

temperature_button:
  template: environment_button
  
  variables:
    min_entity: ''
    max_entity: ''
    
  show_icon: false
  
  state_display: |-
    [[[
      if (entity.state < 100)
        return Math.round(entity.state).toString() + "°"
      else
        return Math.round(entity.state).toString()
    ]]]
    
  styles:      
    custom_fields:
      min:
        - position: absolute
        - bottom: 0
        - right: 5
        - z-index: 1
        
      max:
        - position: absolute
        - bottom: 0
        - right: 0
        - z-index: 1
    
  custom_fields:
    min:
      card:
        type: 'custom:button-card'
        show_icon: false
        show_name: false
        show_state: true
        
        state_display: |
          [[[ 
            return Math.round(states[variables.min_entity].state).toString() + "°";
          ]]]
        
        styles:
          state:
            - font-size: 70%
            - color: var(--disabled-text-color)
          
          card:
            - padding: 0 2px
            - background-color: var(--bar-low-color)
      
    max:
      card:
        type: 'custom:button-card'
        show_icon: false
        show_name: false
        show_state: true
        
        state_display: |
          [[[ 
            return Math.round(states[variables.max_entity].state).toString() + "°";
          ]]]
        
        styles:
          state:
            - font-size: 70%
            - color: var(--disabled-text-color)
          
          card:
            - padding: 0 2px
            - background-color: var(--bar-low-color)

#==========================#
#     HVAC Vent Button     #
#==========================#

hvac_vent_button:
  template: operational_button
      
  # Bogus state display, needed to display the icon. It's hidden by stying.
  state_display: |-
    [[[ 
      return "00°" 
    ]]]
    
  state:
    - value: 'open'
      icon: mdi:hvac
      styles:
        icon:
          - color: var(--paper-item-icon-active-color)
    
    - value: 'closed'
      icon: mdi:hvac-off
      styles:
        icon:
          - color: var(--paper-item-icon-color)
    
  styles:
    custom_fields:
      pos:
        - font-size: 0.6em
        - position: absolute
        - bottom: 1px
        - right: 32px
        - z-index: 1
    
  custom_fields:
    pos: |
      [[[
        if (entity.state == 'closed')
          return `<div style="line-height:1">Closed</div>`;
        else if (entity.attributes.current_position == 100)
          return `<div style="line-height:1">Open</div>`;
        else
          return `<div style="line-height:1">${entity.attributes.current_position}%</div>`;
      ]]]

#============================#
#     Ceiling Fan Button     #
#============================#

ceiling_fan_button:
  template: operational_button

  variables:
    light_entity: ''
  
  # Use the previously set fan speed.
  tap_action:
    action: toggle
  
  # Allow the fan speed to be set.
  double_tap_action:
    action: more-info
  
  # Access the light controls.
  hold_action:
    action: more-info
    entity: |
      [[[
        return variables.light_entity;
      ]]]
      
  # Bogus state display, needed to display the icon. It's hidden by stying.
  state_display: |-
    [[[ 
      return "00°" 
    ]]]
    
  state:
    - value: 'on'
      spin: true
      styles:
        icon:
          - color: var(--paper-item-icon-active-color)
    
    - value: 'off'
      icon: mdi:fan-off
      styles:
        icon:
          - color: var(--paper-item-icon-color)
    
  styles:
    custom_fields:       
      light:
        - z-index: 2
        - position: absolute
        - bottom: 0
        - left: 0
        - display: flex
      
      speed:
        - font-size: 0.6em
        - position: absolute
        - bottom: 1px
        - right: 32px
        - z-index: 1
    
  custom_fields:
    
    # This custom field embeds an icon to control the fan light.
    light:
      card:
        type: 'custom:button-card'
        entity: '[[[ return variables.light_entity ]]]'
        show_icon: true
        icon: 'mdi:ceiling-fan-light'
        show_name: false
        show_state: true
        
        styles:
          grid:
            - grid-template-areas: '"i"'
          
          img_cell:
            - display: contents
          
          card:
            - padding: 0
            - padding-left: 2px
          
          icon:
            - width: 28px
            - height: 25px
            - margin: -4px -3px 0 -4px
  
          # Hide the state display. State is needed to enable a functioning icon.
          state:
            - font-size: 1%
            - color: var(--card-background-color)
            - z-index: 0
    
    # This custom field displays the fan speed.
    speed: |
      [[[
        if (entity.state == 'off')
          return `<div style="line-height:1">Off</div>`;
        else if (entity.attributes.percentage == 33)
          return `<div style="line-height:1">Low</div>`;
        else if (entity.attributes.percentage == 66)
          return `<div style="line-height:1">Med</div>`;
        else
          return `<div style="line-height:1">High</div>`;
      ]]]

#=========================#
#     Bath Fan Button     #
#=========================#

bath_fan_button:
  template: operational_button
  
  tap_action:
    action: toggle
      
  # Bogus state display, needed to display the icon. It's hidden by stying.
  state_display: |-
    [[[ 
      return "00°" 
    ]]]
    
  state:
    - value: 'on'
      icon: mdi:fan
      spin: true
      styles:
        icon:
          - color: var(--paper-item-icon-active-color)
    
    - value: 'off'
      icon: mdi:fan-off
      styles:
        icon:
          - color: var(--paper-item-icon-color)

#
#========================= Internal Templates =========================
#

#=====================#
#     Base Button     #
#=====================#

# This contains common configuration for the other internal templates below.
base_button:
  show_icon: true
  show_state: true
  show_name: true
    
  styles:
    card:
      - background-color: var(--card-background-color)
      - padding: 18px 2px 5px 2px
      - display: flex
      - border: 1px solid gray
      - margin-right: 1px
    
    grid:
      - display: contents
    
    img_cell:
      - display: contents
    
    name:
      - color: var(--primary-text-color)
      - font-size: 0.75em
      - position: absolute
      - top: 0
      - left: 2
      - z-index: 10

#============================#
#     Environment Button     #
#============================#

# This is a base template for use by other templates that deal with environmental controls/sensors.
environment_button:
  template: base_button
  
  variables:
    humidity_entity: ''  
    
  state:
    - id: value_any
      operator: '!='
      value: all
      spin: true
  
  styles:    
    icon:
      - width: 70%
      - position: absolute
      - color: silver
    
    state:
      - font-size: 290%
      - margin-top: '-10px'
      - color: var(--primary-text-color)
      - z-index: 1
    
    custom_fields:        
      humidity:
        - z-index: 2
        - position: absolute
        - bottom: 0
        - left: 0
        - display: flex
  
  custom_fields:
    humidity:
      card:
        type: 'custom:button-card'
        show_icon: true
        icon: 'mdi:water-percent'
        show_name: false
        show_state: true
        
        state_display: |
          [[[
            return Math.round(states[variables.humidity_entity].state).toString();
          ]]]
        
        styles:
          grid:
            - grid-template-areas: '"s i"'
          
          img_cell:
            - display: contents
          
          state:
            - color: 'var(--disabled-text-color)'
            - font-size: 70%
            - align-self: flex-end
          
          card:
            - padding: 0
            - padding-left: 2px
            - background-color: 'var(--bar-low-color)'
          
          icon:
            - color: 'var(--disabled-text-color)'
            - width: 18px
            - height: 15px
            - margin: -4px -3px 0 -4px

#============================#
#     Operational Button     #
#============================#

# This is a base template for use by other templates that operate various devices.
operational_button:
  template: base_button
    
  styles:
    card:
      - width: fit-content
    
    icon:
      - position: absolute
      - color: silver
      - width: 60%
      - bottom: 1px
      - display: block
      - z-index: 10
    
    state:
      - font-size: 350%
      - margin-top: '-10px'
      - color: var(--card-background-color)
      - z-index: 0
