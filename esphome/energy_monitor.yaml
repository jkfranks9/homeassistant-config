substitutions:
  friendly_name:    Energy Mon 2
  
  # Used by boards
  device_name:      energy-mon-2
  loglevel:         DEBUG
  
  # Used by WiFi and sensors
  update_interval:  10s

  # Current Transformers:
  #  20A/25mA SCT-006: 11143
  #  30A/1V SCT-013-030: 8650
  #  50A/1V SCT-013-050: 15420
  #  50A/16.6mA SCT-010: 41334
  #  80A/26.6mA SCT-010: 41660
  #  100A/50ma SCT-013-000: 27518
  #  120A/40mA: SCT-016: 41787
  #  200A/100mA SCT-024: 27518
  #  200A/50mA SCT-024: 55036
  SCT_006_cal: '11143'
  SCT_010_cal: '41660'
  SCT_013_cal: '27518'

  # Jameco 9VAC Transformer: 
  #  For meter versions: 
  #  >= v1.3: 7305
  voltage_cal: '7305'

# Pull in common configuration
packages:
  esp32_base: !include common/esp32_base.yaml
  wifi:       !include common/wifi.yaml

# Enable Home Assistant API
api:

#web_server:
#  port: 80

# SPI is needed for the 6 channel energy monitor
spi:
  clk_pin: 18
  miso_pin: 19
  mosi_pin: 23

# Sensors
sensor:

# There are 2 ICs on the energy monitor. Each one handles 3 of the 6 energy monitoring channels.
# They are referred to as "phases".

  # IC1 ... the board allows for two separate voltages to be measured, but we only need one. It's configured
  # on the first phase of IC1.
  - platform: atm90e32
    cs_pin:
      number: 5
      ignore_strapping_warning: true
    
    phase_a:
      # voltage:
        # name: Volts A
        # id: ic1Volts
        # accuracy_decimals: 1

      # The max value for current that the meter can output is 65.535. If you expect to measure current over 65A, 
      # divide the gain_ct by 2 (120A CT) or 4 (200A CT) and multiply the current and power values by 2 or 4 by uncommenting the filter below
      #        filters:
      #          - multiply: 2
      power:
        name: CT1 Watts
        id: ct1Watts
      #        filters:
      #          - multiply: 2
      gain_voltage: ${voltage_cal}
      gain_ct: ${SCT_006_cal}
    
    phase_b:
      power:
        name: CT2 Watts
        id: ct2Watts
      gain_voltage: ${voltage_cal}
      gain_ct: ${SCT_006_cal}
    
    phase_c:
      power:
        name: CT3 Watts
        id: ct3Watts
      gain_voltage: ${voltage_cal}
      gain_ct: ${SCT_010_cal}
    
    line_frequency: 60Hz
    gain_pga: 1X
    update_interval: ${update_interval}

  # IC2
  - platform: atm90e32
    cs_pin: 4
    
    phase_a:
      # This voltage is only needed if monitoring 2 voltages
      #      voltage:
      #        name: Volts B
      #        id: ic2Volts
      #        accuracy_decimals: 1
      
      # This is the upstairs air handler. I currently only have one CT clamp, so am doubling the 
      # values to compensate, as per Circuit Setup instructions.
      power:
        name: CT4 Watts
        id: ct4Watts
        filters:
          - multiply: 2
      gain_voltage: ${voltage_cal}
      gain_ct: ${SCT_013_cal}
    
    phase_b:
      power:
        name: CT5 Watts
        id: ct5Watts
      gain_voltage: ${voltage_cal}
      gain_ct: ${SCT_010_cal}
    
    phase_c:
      power:
        name: CT6 Watts
        id: ct6Watts
      gain_voltage: ${voltage_cal}
      gain_ct: ${SCT_010_cal}
    
    line_frequency: 60Hz
    gain_pga: 1X
    update_interval: ${update_interval}

  # Total Watts
  - platform: template
    name: Total Watts
    id: totalWatts
    lambda: return id(ct1Watts).state + id(ct2Watts).state + id(ct3Watts).state + id(ct4Watts).state + id(ct5Watts).state + id(ct6Watts).state ;
    accuracy_decimals: 1
    unit_of_measurement: W
    device_class: power
    update_interval: ${update_interval}

  # Some circuits include AV equipment, which I want to track separately from miscellaneous stuff. The AV equipment uses power
  # monitoring plugs, so we can pull in the plug power from HA and subtract it from the total power on each circuit.
  #
  # The same is true for lights and fans (calculated using Powercalc), which are tracked in their own groups.

  # First, pull in power measurements from HA:

  # CT1 includes 5 lights and a fan.
  - platform: homeassistant
    name: Penthouse Light Power
    id: ph_light
    entity_id: sensor.penthouse_bedroom_power
    <<: &import_power
      state_class: measurement
      device_class: power
      unit_of_measurement: W
  
  - platform: homeassistant
    name: Penthouse Lamp Power
    id: ph_lamp
    entity_id: sensor.penthouse_bed_lamp_power
    <<: *import_power
  
  - platform: homeassistant
    name: Penthouse Tub Light Power
    id: ph_tub
    entity_id: sensor.penthouse_shower_power
    <<: *import_power
  
  - platform: homeassistant
    name: Penthouse Vanity Light Power
    id: ph_vanity
    entity_id: sensor.penthouse_vanity_power
    <<: *import_power
  
  - platform: homeassistant
    name: Utility Light Power
    id: util_light
    entity_id: sensor.utility_power
    <<: *import_power
  
  - platform: homeassistant
    name: Penthouse Fan Power
    id: ph_fan
    entity_id: sensor.penthouse_fan_power
    <<: *import_power

  # CT2 includes 3 lights, a fan and 2 subwoofers.
  - platform: homeassistant
    name: Theater Ceiling Power
    id: th_ceiling
    entity_id: sensor.theater_recessed_power
    <<: *import_power
  
  - platform: homeassistant
    name: Theater Sconces Power
    id: th_sconces
    entity_id: sensor.theater_sconces_power
    <<: *import_power
  
  - platform: homeassistant
    name: Theater Fan Light Power
    id: th_fan_light
    entity_id: sensor.theater_fan_light_power
    <<: *import_power
  
  - platform: homeassistant
    name: Theater Fan Power
    id: th_fan
    entity_id: sensor.theater_fan_power
    <<: *import_power
  
  - platform: homeassistant
    name: Subwoofer Front Power
    id: sub_front
    entity_id: sensor.subwoofer_front_power
    <<: *import_power
  
  - platform: homeassistant
    name: Subwoofer Back Power
    id: sub_back
    entity_id: sensor.subwoofer_back_power
    <<: *import_power

  # CT5 includes the equipment rack, aka theater AV.
  - platform: homeassistant
    name: Theater AV Power
    id: th_av
    entity_id: sensor.theater_av_current_consumption
    <<: *import_power
  
  # CT6 includes the projector.
  - platform: homeassistant
    name: Projector Power
    id: projector
    entity_id: sensor.projector_power
    <<: *import_power
  
  # Next, calculate the corrected power for the above circuits:
  - platform: template
    name: Bed/Bath Corrected Power
    id: bed_bath_corrected_power
    lambda: return id(ct1Watts).state - id(ph_light).state - id(ph_lamp).state - id(ph_tub).state - id(ph_vanity).state - id(util_light).state - id(ph_fan).state;
    <<: &corrected_power
      accuracy_decimals: 2
      unit_of_measurement: W
      device_class: power
      update_interval: ${update_interval}
      internal: true
  
  - platform: template
    name: Theater/Hall Corrected Power
    id: theater_hall_corrected_power
    lambda: return id(ct2Watts).state - id(th_ceiling).state - id(th_sconces).state - id(th_fan_light).state - id(th_fan).state - id(sub_front).state - id(sub_back).state;
    <<: *corrected_power
  
  - platform: template
    name: Utility Rack Corrected Power
    id: utility_rack_corrected_power
    lambda: return id(ct5Watts).state - id(th_av).state ;
    <<: *corrected_power
  
  - platform: template
    name: Utility Misc Corrected Power
    id: utility_misc_corrected_power
    lambda: return id(ct6Watts).state - id(projector).state ;
    <<: *corrected_power

#=============================#
#     HA Energy Dashboard     #
#=============================#
  
  - platform: total_daily_energy
    name: Bed/Bath Energy
    power_id: bed_bath_corrected_power
    <<: &energy_dashboard
      filters:
        - multiply: 0.001
      unit_of_measurement: kWh
      device_class: energy
      state_class: total_increasing
  
  - platform: total_daily_energy
    name: Theater/Hall Energy
    power_id: theater_hall_corrected_power
    <<: *energy_dashboard
  
  - platform: total_daily_energy
    name: Snack Bar Energy
    power_id: ct3Watts
    <<: *energy_dashboard
  
  - platform: total_daily_energy
    name: Air Handler Energy
    power_id: ct4Watts
    <<: *energy_dashboard
  
  - platform: total_daily_energy
    name: Utility Rack Energy
    power_id: utility_rack_corrected_power
    <<: *energy_dashboard
  
  - platform: total_daily_energy
    name: Utility Misc Energy
    power_id: utility_misc_corrected_power
    <<: *energy_dashboard
  
  - platform: total_daily_energy
    name: Total Energy
    power_id: totalWatts
    <<: *energy_dashboard

# This is needed for the Home Assistant energy dashboard.
time:
  - platform: sntp
    id: sntp_time   

# Restart switch
switch:
  - platform: restart
    name: Restart
