# Device specific information
substitutions:
  device_name:               esp32-voice
  
  # Used by boards
  loglevel:                  DEBUG
  
  # Used by WiFi
  friendly_name:             Voice
  update_interval:           600s

esphome:
  name: ${device_name}
  on_boot:
     - priority: -100
       then:
         - wait_until: api.connected
         - logger.log: "API connected"
         - delay: 1s
         - if:
             condition:
               switch.is_on: use_wake_word
             then:
               - logger.log: "Starting voice assistant continuous"
               - voice_assistant.start_continuous:

# Pull in common configuration
packages:
  esp32_idf_base: !include common/esp32_idf_base.yaml
  wifi:           !include common/wifi.yaml

# Enable Home Assistant API
api:

i2s_audio:
  i2s_lrclk_pin: GPIO19
  i2s_bclk_pin: GPIO18

microphone:
  - platform: i2s_audio
    id: mic
    adc_type: external
    i2s_din_pin: GPIO23
    pdm: false

speaker:
  - platform: i2s_audio
    id: big_speaker
    dac_type: external
    i2s_dout_pin: GPIO21
    mode: mono

voice_assistant:
  microphone: mic
  use_wake_word: false
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  speaker: big_speaker
  id: assist

switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - logger.log: "Use wake word turned on"
      - lambda: id(assist).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
    on_turn_off:
      - logger.log: "Use wake word turned off"
      - voice_assistant.stop
      - lambda: id(assist).set_use_wake_word(false);