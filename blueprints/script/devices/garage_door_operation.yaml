# Operate a garage door.

blueprint:
  name: Garage Door Operation
  description: Open or close a garage door, with an optional informational message, and confirmation detection.
  domain: script
  
  input:
    name:
      name: Garage Door Name
      description: 'The garage door user friendly name.'
    
    operation:
      name: Garage Door Operation
      description: 'Whether to open or close the door.'
      selector:
        select:
          options:
            - Open
            - Close
    
    contact:
      name: Contact Sensor Entity
      description: 'The garage door contact sensor entity.'
      selector:
        entity:
          domain: binary_sensor
    
    switch:
      name: Switch Entity
      description: 'The switch to operate the garage door.'
      selector:
        entity:
          domain: switch

mode: parallel

fields:
  use_info_message:
    name: Use Informational Message
    description: Should an informational notification message be issued prior to operating the door?
    selector:
      boolean:

# The !input tag cannot be used in templates, so assign variables to the necessary inputs.
variables:
  input_name: !input name
  input_operation: !input operation
  input_contact: !input contact
  
  lockout_timer: "{{ 'timer.garage_door_' ~ input_name ~ '_lockout' }}"  
  msg_operation: "{{ iif(input_operation == 'Open', 'Opening', 'Closing') }}"

sequence:
      
  # Action is only required if the door is currently in the opposite state (contact on means closed).
  - condition: "{{ iif(input_operation == 'Open', is_state(input_contact, 'on'), is_state(input_contact, 'off')) }}"
  
  # Prevent multiple quick actions, for example trying to open the door twice because I arrived home at the same time as a 
  # family member. Such rapid actions leave the door partially open. We use a timer for this purpose.
  - condition: "{{ states(lockout_timer) == 'idle' }}"
    
  # Send an informational notification that the door is about to be operated, if requested.
  - if:
      - "{{ use_info_message == true }}"
      
    then:
      - service: script.send_notification
        data:
          destination:
            - mobile
          title: 'Attention:'
          message: '{{ msg_operation }} garage door {{ input_name }}.'
          channel: standard
          throttled: false
          tag: '{{ input_name }}_garage_door_message'
          timeout: 0
    
  # Operate the door.
  - service: switch.turn_on
    target:
      entity_id: !input switch
    
  # Wait a bit before confirming.
  - delay: '00:00:15'
    
  # Confirm that the door is in the proper state. If so, we're done.
  - condition: "{{ iif(input_operation == 'Open', is_state(input_contact, 'on'), is_state(input_contact, 'off')) }}"
    
  # The operation did not succeed, so send another notification.
  - service: script.send_notification
    data:
      destination:
        - mobile
      title: 'Warning:'
      message: 'Garage door {{ input_name }} operation did not succeed.'
      channel: critical
      throttled: false
      tag: '{{ input_name }}_operation_problem'
      timeout: 0
