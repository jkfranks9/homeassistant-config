# Operate a garage door.

blueprint:
  name: Garage Door Operation
  description: Open or close a garage door, with an optional informational message, and confirmation detection.
  domain: script
  
  input:
    name:
      name: Garage Door Name
      description: 'The garage door user friendly name.'
    
    operation:
      name: Garage Door Operation
      description: 'Whether to open or close the door.'
      selector:
        select:
          options:
            - Open
            - Close
    
    contact:
      name: Contact Sensor Entity
      description: 'The garage door contact sensor entity.'
      selector:
        entity:
          domain: binary_sensor
    
    switch:
      name: Switch Entity
      description: 'The switch to operate the garage door.'
      selector:
        entity:
          domain: switch

mode: parallel

# The !input tag cannot be used in templates, so assign variables to the necessary inputs.
variables:
  input_name: !input name
  input_operation: !input operation
  input_contact: !input contact
  
  msg_operation: "{{ iif(input_operation == 'Open', 'Opening', 'Closing') }}"

sequence:
    
  # Simulate the request if testing mode is on.
  - if:
      - "{{ is_state('input_boolean.testing_mode', 'off') }}"
      
    then:
    
      # Action is only required if the door is currently in the opposite state (contact on means closed).
      - condition: "{{ iif(input_operation == 'Open', is_state(input_contact, 'on'), is_state(input_contact, 'off')) }}"
        
      # Send an informational notification that the door is about to be operated, if requested.
      # NOTE: The input boolean must be set outside of the calling script.
      - if:
          - condition: state
            entity_id: input_boolean.garage_door_info_message
            state: 'on'
          
        then:
          - service: script.send_notification
            data:
              destination:
                - mobile
              title: 'Attention:'
              message: '{{ msg_operation }} garage door {{ input_name }}.'
              channel: standard
              throttled: false
              tag: ''
              timeout: 0
        
      # Operate the door.
      - service: switch.turn_on
        target:
          entity_id: !input switch
        
      # Wait a bit before confirming.
      - delay: '00:01:00'
        
      # Confirm that the door is in the proper state. If so, we're done.
      - condition: "{{ iif(input_operation == 'Open', is_state(input_contact, 'on'), is_state(input_contact, 'off')) }}"
        
      # The operation did not succeed, so send another notification.
      - service: script.send_notification
        data:
          destination:
            - mobile
          title: 'Action required:'
          message: 'Garage door {{ input_name }} operation did not succeed.'
          channel: critical
          throttled: false
          tag: '{{ input_name }}_operation_problem'
          timeout: 0
      
    else:
      - service: script.log_testing_simulation
        data:
          category: garage
          message: "{{ 'Garage name ' ~ input_name ~ ' operation ' ~ input_operation ~ '.' }}"
