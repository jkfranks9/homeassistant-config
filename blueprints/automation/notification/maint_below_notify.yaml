# Notify for device attribute being low enough to require maintenance, such as replacing a device filter.

blueprint:
  name: Maintenance Low Notification
  description: Notify when device attribute crosses a low threshold.
  domain: automation
  
  input:
    sensor_entity:
      name: Sensor Entity
      description: Sensor entity to be checked.
      selector:
        entity:
          domain: sensor
          
    threshold:
      name: Threshold Value
      description: Sensor threshold value to trigger the notification.
      selector:
        number:
          min: 0
          max: 3000
    
    timer_entity:
      name: Timer Entity
      description: Timer entity associated with the notification, used for throttling.
      selector:
        entity:
          domain: timer
    
    message:
      name: Notification Message
      description: Message to be issued.
    
    persistent:
      name: Indicates if the notification should persist.
      description: If true, the notification can only be removed using a future automation, script or device state change.
      selector:
        boolean:
    
    tag:
      name: Notification Tag
      description: (Optional) The tag for persistent notifications.
      default: ''

# The !input tag cannot be used in templates, so assign variables to any needed inputs.
variables:
  input_persistent: !input persistent

# Trigger when the sensor value becomes too low.
trigger:
  - platform: numeric_state
    entity_id: !input sensor_entity
    below: !input threshold

action:
  - if:
    
      # Handle a persistent notification.
      - "{{ input_persistent }}"
      
    then:
      - service: script.send_notification
        data:
          destination:
            - mobile
          title: 'Action required:'
          message: !input message
          channel: persistent
          throttled: true
          timer_entity: !input timer_entity
          tag: !input tag
          timeout: 0
    
    # Handle a non-persistent notification.
    else:
      - service: script.send_notification
        data:
          destination:
            - mobile
          title: 'Action required:'
          message: !input message
          channel: standard
          throttled: true
          timer_entity: !input timer_entity
          tag: !input tag
          timeout: 0
