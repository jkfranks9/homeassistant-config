# Calculate calories for simple exercises.

blueprint:
  name: Calories Calculator
  description: Calculate calories for simple exercises.
  domain: automation
  
  input:
    time_entity:
      name: Time Entity
      description: Entity that contains the amount of time spent on the exercise, in minutes.
      selector:
        entity:
          domain: input_number
    
    calories_entity:
      name: Calories Entity
      description: Entity to be updated with the calculated calories.
      selector:
        entity:
          domain: input_number
    
    calorie_rate:
      name: Calorie Rate
      description: The number of calories burned per hour.

# The !input tag cannot be used in templates, so assign variables to any needed inputs.
variables:
  time_entity: !input time_entity
  calorie_rate: !input calorie_rate

# Trigger when the time entity is updated.
trigger:
  - platform: state
    entity_id: !input time_entity

action:
  
  # Short delay just to be safe.
  - delay:  '00:00:01'
  
  # Continue only if the time value is above zero. This ensures we don't continue when the time is reset to
  # zero with an automation that runs in the wee hours.
  - condition: numeric_state
    entity_id: !input time_entity
    above: 0
    
  # Calculate the calories.
  - service: input_number.set_value
    target:
      entity_id: !input calories_entity
    data:
      value: "{{ ((states(time_entity) | int(0) / 60) * calorie_rate) | int(0) }}"
