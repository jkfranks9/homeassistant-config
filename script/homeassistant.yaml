#===================#
#     Utilities     #
#===================#

# Concatenate a set of backup log files into one file for easier examination.
concat_log_files:
  alias: Concat Log Files
  sequence:
    - service: shell_command.concat_log_files

# Concatenate a set of automation log files into one file for easier examination.
concat_auto_log_files:
  alias: Concat Auto Log Files
  sequence:
    - service: shell_command.concat_auto_log_files

# Concatenate a set of scripts log files into one file for easier examination.
concat_scripts_log_files:
  alias: Concat Scripts Log Files
  sequence:
    - service: shell_command.concat_scripts_log_files

#===================#
#     Reminders     #
#===================#

# Set an input datetime entity with an offset in days.
set_datetime_offset_days:
  alias: Set Datetime Offset Days
  sequence:
    - service: input_datetime.set_datetime
      data:
        entity_id: "{{ entity }}"
        datetime: "{{ now().today().replace(hour=0, minute=0, second=0, microsecond=0) + timedelta(days = interval) }}"

# Set an input datetime entity with an offset in weeks.
set_datetime_offset_weeks:
  alias: Set Datetime Offset Weeks
  sequence:
    - service: input_datetime.set_datetime
      data:
        entity_id: "{{ entity }}"
        datetime: "{{ now().today().replace(hour=0, minute=0, second=0, microsecond=0) + timedelta(weeks = interval) }}"

# Set an input datetime entity with an offset in months.
set_datetime_offset_months:
  alias: Set Datetime Offset Months
  sequence:
    - service: input_datetime.set_datetime
      data:
        entity_id: '{{ entity }}'
        datetime: >
          {%- set dtobj=now().fromtimestamp(as_timestamp(states(entity))) %}
          {%- set sub_months=((dtobj.year) * 12 + (dtobj.month + interval - 1)) %}
          {%- set new_months=((sub_months) % 12) + 1 %}
          {%- set new_year=((sub_months - new_months + 1) / 12) | int(0) %}
          {{ dtobj.replace(month=new_months, year=new_year) }}

#=================#
#     Adguard     #
#=================#

# These are used for automatic control of Adguard for different Shield applications, and for voice
# control via Alexa.
turn_off_adguard:
  alias: Turn Off Adguard
  sequence:
    - service: switch.turn_off
      entity_id: switch.adguard_protection

turn_on_adguard:
  alias: Turn On Adguard
  sequence:
    - service: switch.turn_on
      entity_id: switch.adguard_protection
