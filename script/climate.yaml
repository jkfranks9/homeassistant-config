#===========================#
#     Weather Condition     #
#===========================#

# Distill the OpenWeather code into an approximation of the available light level.
#
# Openweather Codes:
#   2xx - Thunderstorm
#   3xx - Drizzle
#   5xx - Rain
#   6xx - Snow
#   7xx - Atmosphere
#   800 - Clear
#   801 - 11% to 25% clouds
#   802 - 26% to 50% clouds
#   803 - 51% to 84% clouds
#   804 - 85% to 100% clouds
evaluate_weather_condition:
  alias: Evaluate Weather Condition
  
  # Allow multiple independent runs.
  mode: parallel
  
  sequence:
    - choose:
      
      # Clear or light clouds
      - conditions:
        - condition: template
          value_template: >
            {{  states('sensor.openweathermap_weather_code') | int(0) == 800 or
                states('sensor.openweathermap_weather_code') | int(0) == 801 }}
        sequence:
          - service: input_select.select_option
            entity_id: input_select.weather_condition
            data:
              option: 'clear'
      
      # Drizzle, atmospheric haze or moderate clouds
      - conditions:
        - condition: template
          value_template: >
            {{ (states('sensor.openweathermap_weather_code') | int(0) >= 300 and
                states('sensor.openweathermap_weather_code') | int(0) <  400) or
               (states('sensor.openweathermap_weather_code') | int(0) >= 700 and
                states('sensor.openweathermap_weather_code') | int(0) <  800) or
                states('sensor.openweathermap_weather_code') | int(0) == 802 }}
        sequence:
          - service: input_select.select_option
            entity_id: input_select.weather_condition
            data:
              option: 'hazy'
      
      # Thunderstorm, rain, snow or heavy clouds
      - conditions:
        - condition: template
          value_template: >
            {{ (states('sensor.openweathermap_weather_code') | int(0) >= 200 and
                states('sensor.openweathermap_weather_code') | int(0) <  300) or
               (states('sensor.openweathermap_weather_code') | int(0) >= 500 and
                states('sensor.openweathermap_weather_code') | int(0) <  700) or
                states('sensor.openweathermap_weather_code') | int(0) == 803  or
                states('sensor.openweathermap_weather_code') | int(0) == 804 }}
        sequence:
          - service: input_select.select_option
            entity_id: input_select.weather_condition
            data:
              option: 'gloomy'
      
      # This should never happen, log a warning but choose clear.
      default:
        - service: system_log.write
          data:
            message: Unexpected weather code {{ states('sensor.openweathermap_weather_code') }}
            level: warning
        - service: input_select.select_option
          entity_id: input_select.weather_condition
          data:
            option: 'clear'

#=============================#
#     Thermostat Vacation     #
#=============================#

# Create a vacation for a given thermostat.
create_thermostat_vacation:
  alias: Create Thermostat Vacation
  
  fields:
    thermostat_entity:
      description: The thermostat on which to create a vacation.
    
    type:
      description: The type of vacation to be created.
      selector:
        select:
          options:
            - Extended
            - Temporary
  
  sequence:
    
    # Create the vacation on the thermostat. Note that the name is limited to 12 characters.
    - choose:
        
      # For an extended vacation, use the extended away dates/times, and a wide temperature range.
      - conditions:
        - condition: template
          value_template: "{{ type == 'Extended' }}"
        sequence:
          - service: ecobee.create_vacation
            data_template:
              entity_id: "{{ thermostat_entity }}"
              vacation_name: "{{ states('input_datetime.extended_away_start').split(' ')[0] }}"
              start_date: "{{ states('input_datetime.extended_away_start').split(' ')[0] }}"
              start_time: "{{ states('input_datetime.extended_away_start').split(' ')[1] }}"
              end_date: "{{ states('input_datetime.extended_away_end').split(' ')[0] }}"
              end_time: "{{ states('input_datetime.extended_away_end').split(' ')[1] }}"
              heat_temp: 59
              cool_temp: 83
      
      # For a temporary vacation, use today's date (plus 3 days for the end), and a normal temperature range.
      - conditions:
        - condition: template
          value_template: "{{ type == 'Temporary' }}"
        sequence:
          - service: ecobee.create_vacation
            data_template:
              entity_id: "{{ thermostat_entity }}"
              vacation_name: "Temporary"
              start_date: "{{ states('sensor.date') }}"
              start_time: "{{ now().strftime('%H:%M:%S') }}"
              end_date: "{{ (as_timestamp(states('sensor.date')) + 259200) | timestamp_custom('%Y-%m-%d') }}"
              end_time: "{{ now().strftime('%H:%M:%S') }}"
              heat_temp: 67
              cool_temp: 77
      
      # Invalid type specified, log it.
      default:
        - service: system_log.write
          data:
            message: "Invalid vacation type {{ type }} specified"
            level: error

# Remove a vacation for a given thermostat.
remove_thermostat_vacation:
  alias: Remove Thermostat Vacation
  
  fields:
    thermostat_entity:
      description: The thermostat on which to remove a vacation.
  
  sequence:
    
    # Remove the vacation on the thermostat. Note that the name is limited to 12 characters.
    - choose:
        
      # For an extended vacation, use the extended away start date.
      - conditions:
        - condition: template
          value_template: "{{ type == 'Extended' }}"
        sequence:
          - service: ecobee.delete_vacation
            data_template:
              entity_id: "{{ thermostat_entity }}"
              vacation_name: "{{ states('input_datetime.extended_away_start').split(' ')[0] }}"
      
      # For a temporary vacation, use the hardcoded name.
      - conditions:
        - condition: template
          value_template: "{{ type == 'Temporary' }}"
        sequence:
          - service: ecobee.delete_vacation
            data_template:
              entity_id: "{{ thermostat_entity }}"
              vacation_name: "Temporary"
      
      # Invalid type specified, log it.
      default:
        - service: system_log.write
          data:
            message: "Invalid vacation type {{ type }} specified"
            level: error
