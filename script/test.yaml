#==============#
#     Kodi     #
#==============#

test_kodi:
  alias: Test Kodi
  
  sequence:
  
    # Send the 'get movies' command to Kodi.
    - service: kodi.call_method
      data:
        entity_id: media_player.kodi
        #method: VideoLibrary.GetMusicVideos
        method: VideoLibrary.GetMovies
    
    # Wait a bit for a good 'get movies' result, but quit if it times out.
    - wait_for_trigger:
        - platform: event
          event_type: test_kodi_result
          #event_data:
          #  source: "{{ wait.trigger.event.data.source }}"
      timeout: 10
      continue_on_timeout: false
        
    - service: system_log.write
      data:
        message: "{{ wait.trigger.event.data.result }}"
        level: warning

test_kodi_video_playlist:
  alias: Test Kodi Video Playlist
  
  sequence:
  
    - service: kodi.call_method
      target:
        entity_id: media_player.kodi
      data:
        method: Playlist.Clear
        playlistid: 1
    
    - wait_for_trigger:
        - platform: event
          event_type: kodi_call_method_result
          event_data:
            result_ok: true
            input:
              method: Playlist.Clear
      timeout: 3
  
    - service: kodi.call_method
      target:
        entity_id: media_player.kodi
      data:
        method: Playlist.Add
        playlistid: 1
        item:
          musicvideoid: 55
    
    - wait_for_trigger:
        - platform: event
          event_type: kodi_call_method_result
          event_data:
            result_ok: true
            input:
              method: Playlist.Add
      timeout: 3
  
    - service: kodi.call_method
      target:
        entity_id: media_player.kodi
      data:
        method: Playlist.Add
        playlistid: 1
        item:
          musicvideoid: 66
    
    - wait_for_trigger:
        - platform: event
          event_type: kodi_call_method_result
          event_data:
            result_ok: true
            input:
              method: Playlist.Add
      timeout: 3

#================#
#     Shield     #
#================#

test_shield_app:
  alias: Test Shield App
  
  sequence:
    - service: androidtv.adb_command
      data:
        entity_id: media_player.shield_tv
        command: "am start -a android.intent.action.MAIN -c android.intent.category.LEANBACK_LAUNCHER -n com.hulu.livingroomplus/.MainActivity"

#==========================#
#     Friendly Strings     #
#==========================#

test_friendly_time:
  alias: Test Friendly Time
  
  sequence:
    - service: script.send_notification
      data:
        destination:
          - persistent
        title: 'Test:'
        notification_id: 'test_friendly'
        message: >
          {% from 'friendly_strings.jinja' import format_duration %}
          {{ format_duration(state_attr('input_datetime.reminder_cleaning_studio_bath', 'timestamp')) }}

#================#
#     Lights     #
#================#

test_light_flash:
  alias: Test Light Flash
  
  sequence:
        
    - repeat:
        count: 3
        sequence:
    
          - service: light.turn_on
            entity_id: light.foyer_hutch
          
          - delay: 2
    
          - service: light.turn_off
            entity_id: light.foyer_hutch
          
          - delay: 2

#=======================================#
#     Alexa Actionable Notification     #
#=======================================#

test_alexa_actionable_notification:
  alias: Test Alexa Actionable Notification
  
  sequence:
    - service: script.activate_alexa_actionable_notification
      data:
        message: Would you like me to flash the light?
        event_id: actionable_notification_flash_light
        alexa_device: media_player.office_echo
        suppress_confirmation: false

#=======================#
#     Dynamic Group     #
#=======================#

test_group_create:
  alias: Test Group Create
  
  sequence:
    service: group.set
    data:
      name: Test Group
      object_id: test_group
      entities:
        - light.family_room_lamp
        - light.hallway_lamp

test_group_modify:
  alias: Test Group Modify
  
  sequence:
    service: group.set
    data:
      name: Test Group
      object_id: test_group
      entities:
        - light.family_room_lamp
        - light.hallway_lamp
        - light.studio_light

test_group_remove:
  alias: Test Group Remove
  
  sequence:
    service: group.remove
    data:
      object_id: test_group

#==========================#
#     Global Variables     #
#==========================#

test_remove_global_variables:
  alias: Test Remove Global Variables
  
  sequence:
    
    - event: remove_variable
      event_data:
        key: laundry_sensing

#=====================#
#     Alexa Media     #
#=====================#

test_alexa_update_last_called:
  alias: Test Alexa Update Last Called
  
  sequence:
    - service: alexa_media.update_last_called

#==================================#
#     Riemann Sum Integrations     #
#==================================#

test_restore_riemann_integrations:
  alias: Test Restore Riemann Integrations
  
  sequence:
    - service: homeassistant.update_entity
      target:
        entity_id:
        - sensor.attic_light_energy
        - sensor.back_floodlight_energy
        - sensor.back_yard_light_energy
        - sensor.dining_room_hutch_energy
        - sensor.dining_room_lamps_energy
        - sensor.driveway_lights_energy
        - sensor.family_room_av_energy
        - sensor.family_room_fan_energy
        - sensor.family_room_lamp_energy
        - sensor.fire_tv_energy
        - sensor.foyer_hutch_energy
        - sensor.front_floodlight_energy
        - sensor.garage_lights_energy
        - sensor.hallway_lamp_energy
        - sensor.hallway_lights_energy
        - sensor.island_light_energy
        - sensor.kitchen_light_energy
        - sensor.laundry_room_light_energy
        - sensor.master_bath_fan_energy
        - sensor.master_bath_light_energy
        - sensor.master_bedroom_lamp_energy
        - sensor.microwave_energy
        - sensor.office_bookcase_light_energy
        - sensor.office_fan_energy
        - sensor.office_lamp_energy
        - sensor.penthouse_fan_energy
        - sensor.penthouse_lamp_energy
        - sensor.penthouse_light_energy
        - sensor.penthouse_tub_light_energy
        - sensor.penthouse_vanity_light_energy
        - sensor.porch_light_energy
        - sensor.projector_energy
        - sensor.refrigerator_energy
        - sensor.sink_light_energy
        - sensor.snack_light_energy
        - sensor.stairway_light_energy
        - sensor.studio_fan_energy
        - sensor.studio_lamp_1_energy
        - sensor.studio_lamp_2_energy
        - sensor.studio_light_energy
        - sensor.theater_av_energy
        - sensor.theater_ceiling_energy
        - sensor.theater_fan_energy
        - sensor.theater_sconces_energy
        - sensor.treadmill_energy
        - sensor.treadmill_fan_energy
        - sensor.utility_light_energy
        - sensor.washer_energy

#=======================#
#     Extended Away     #
#=======================#

# NOTE: This must be tested after sundown.
test_extended_away_early_return:
  alias: Test Extended Away Early Return
  
  sequence:
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.extended_away_start
      data:
        datetime: "{{ (now() + timedelta(minutes = 2)).strftime('%Y-%m-%d %H:%M:%S') }}"
    
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.extended_away_end
      data:
        datetime: "{{ (now() + timedelta(minutes = 300)).strftime('%Y-%m-%d %H:%M:%S') }}"
    
    - delay: '01:40:00'
    
    - service: script.turn_off_extended_away_mode
