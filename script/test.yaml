#================#
#     Washer     #
#================#

test_washer_cycle:
  alias: Test Washer Cycle
  
  sequence:
    - variables:
        pow: [2.5, 8, 400, 200, 126, 155, 230, 190, 275, 321, 77, 120, 160, 180, 155, 77, 41, 43, 4.8, 11, 10, 380, 200, 195, 305, 280, 250, 420, 150, 110, 33, 39, 35, 204, 70, 66, 321, 160, 190, 230, 42, 8, 5.4, 2.5]
    - repeat:
        count: "{{ pow | length }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.washer_test_power
            data:
              value: "{{ pow[repeat.index-1] }}"
          - delay: '00:00:05'

#==============#
#     Kodi     #
#==============#

test_kodi_start:
  alias: Test Kodi Start
  
  sequence:
    
    # Turn on the Shield TV so we can host the Kodi application.
    - service: media_player.turn_on
      data:
        entity_id: media_player.shield_tv
    - delay: '00:00:03'
  
    # Start Kodi on the Shield TV.
    - service: androidtv.adb_command
      data:
        entity_id: media_player.shield_tv
        command: "am start -a android.intent.action.MAIN -c android.intent.category.LEANBACK_LAUNCHER -n 'org.xbmc.kodi/.Splash'"

test_kodi_stop:
  alias: Test Kodi Stop
  
  sequence:
  
    # Exit the Kodi application.
    - service: remote.send_command
      entity_id: remote.harmony_hub
      data:
        command: 'Home'
        device: NVIDIA Shield TV
    - delay: '00:00:02'
    
    # Turn off the Kodi media player.
    - service: media_player.turn_off
      data:
        entity_id: media_player.kodi
  
    # Turn the Shield TV off again.
    - service: media_player.turn_off
      data:
        entity_id: media_player.shield_tv

test_kodi:
  alias: Test Kodi
  
  sequence:
  
    # Send the 'get movies' command to Kodi.
    - service: kodi.call_method
      data:
        entity_id: media_player.kodi
        #method: VideoLibrary.GetMusicVideos
        method: VideoLibrary.GetMovies
    
    # Wait a bit for a good 'get movies' result, but quit if it times out.
    - wait_for_trigger:
        - platform: event
          event_type: test_kodi_result
          #event_data:
          #  source: "{{ wait.trigger.event.data.source }}"
      timeout: 10
      continue_on_timeout: false
        
    - service: system_log.write
      data:
        message: "{{ wait.trigger.event.data.result }}"
        level: warning

#====================#
#     Thermostat     #
#====================#

test_thermostat_hold:
  alias: Test Thermostat Hold
  
  sequence:
    - service: ecobee.create_vacation
      data_template:
        entity_id: climate.upstairs
        vacation_name: "Temporary"
        start_date: "{{ states('sensor.date') }}"
        start_time: "{{ now().strftime('%H:%M:%S') }}"
        end_date: "{{ (as_timestamp(states('sensor.date')) + 86400) | timestamp_custom('%Y-%m-%d') }}"
        end_time: "{{ now().strftime('%H:%M:%S') }}"
        heat_temp: 59
        cool_temp: 83

test_remove_thermostat_hold:
  alias: Test Remove Thermostat Hold
  
  sequence:
    - condition: template
      value_template: "{{ state_attr('climate.upstairs', 'preset_mode') == 'vacation' }}"
    - service: ecobee.delete_vacation
      data_template:
        entity_id: climate.upstairs
        vacation_name: "Temporary"

#=================#
#     Bedtime     #
#=================#

test_bedtime_adults_down:
  alias: Test Bedtime Adults Down
  
  sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.nighttime
    - service: input_boolean.turn_on
      entity_id: input_boolean.adults_home
    - service: input_boolean.turn_off
      entity_id: input_boolean.children_home
    - service: input_select.select_option
      entity_id: input_select.occupied_bedrooms
      data:
        option: 'Downstairs'
    - service: script.establish_bedtime_environment


test_bedtime_adults_up:
  alias: Test Bedtime Adults Up
  
  sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.nighttime
    - service: input_boolean.turn_on
      entity_id: input_boolean.adults_home
    - service: input_boolean.turn_off
      entity_id: input_boolean.children_home
    - service: input_select.select_option
      entity_id: input_select.occupied_bedrooms
      data:
        option: 'Upstairs'
    - service: script.establish_bedtime_environment


test_bedtime_adults_both:
  alias: Test Bedtime Adults Both
  
  sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.nighttime
    - service: input_boolean.turn_on
      entity_id: input_boolean.adults_home
    - service: input_boolean.turn_off
      entity_id: input_boolean.children_home
    - service: input_select.select_option
      entity_id: input_select.occupied_bedrooms
      data:
        option: 'Both'
    - service: script.establish_bedtime_environment


test_bedtime_children_down:
  alias: Test Bedtime Chidren Down
  
  sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.nighttime
    - service: input_boolean.turn_off
      entity_id: input_boolean.adults_home
    - service: input_boolean.turn_on
      entity_id: input_boolean.children_home
    - service: input_select.select_option
      entity_id: input_select.occupied_bedrooms
      data:
        option: 'Downstairs'
    - service: script.establish_bedtime_environment


test_bedtime_children_up:
  alias: Test Bedtime Chidren Up
  
  sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.nighttime
    - service: input_boolean.turn_off
      entity_id: input_boolean.adults_home
    - service: input_boolean.turn_on
      entity_id: input_boolean.children_home
    - service: input_select.select_option
      entity_id: input_select.occupied_bedrooms
      data:
        option: 'Upstairs'
    - service: script.establish_bedtime_environment


test_bedtime_children_both:
  alias: Test Bedtime Chidren Both
  
  sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.nighttime
    - service: input_boolean.turn_off
      entity_id: input_boolean.adults_home
    - service: input_boolean.turn_on
      entity_id: input_boolean.children_home
    - service: input_select.select_option
      entity_id: input_select.occupied_bedrooms
      data:
        option: 'Both'
    - service: script.establish_bedtime_environment

#================#
#     Backup     #
#================#

test_backup_logs:
  alias: Test Backup Logs
  
  sequence:
    - service: shell_command.backup_auto_log

#================#
#     Shield     #
#================#

test_shield_app:
  alias: Test Shield App
  
  sequence:
    - service: androidtv.adb_command
      data:
        entity_id: media_player.shield_tv
        command: "am start -a android.intent.action.MAIN -c android.intent.category.LEANBACK_LAUNCHER -n com.hulu.livingroomplus/.MainActivity"

#================#
#     Notify     #
#================#

test_notify_echo:
  alias: Test Notify Echo
  
  sequence:
    - service: script.send_notification
      data:
        destination:
          - echo
        message: 'Testing 1 2 3'
        media_player_entity: media_player.everywhere

test_notify_persistent:
  alias: Test Notify Persistent
  
  sequence:
    - service: script.send_notification
      data:
        destination:
          - persistent
        title: 'Test:'
        notification_id: 'testing123'
        message: 'Testing 1 2 3'

test_notify_mobile:
  alias: Test Notify Mobile
  
  sequence:    
    - service: script.send_notification
      data:
        destination:
          - mobile
        title: 'Test:'
        message: 'Testing 1 2 3'
        channel: standard
        throttled: false
    
    - delay: '00:00:30'
    
    - service: script.send_notification
      data:
        destination:
          - mobile
        title: 'Test:'
        message: 'Testing 1 2 3'
        channel: temporary
        throttled: false
        timeout: 15
    
    - delay: '00:00:30'
    
    - service: script.send_notification
      data:
        destination:
          - mobile
        title: 'Test:'
        message: 'Testing 1 2 3'
        channel: persistent
        throttled: false
        tag: 'test123'
    
    - delay: '00:00:15'
    
    - service: notify.mobile_app_jon_galaxy
      data:
        message: 'clear_notification'
        data:
          tag: 'test123'
    
    - delay: '00:00:15'
    
    - service: script.send_notification
      data:
        destination:
          - mobile
        title: 'Test:'
        message: 'Testing 1 2 3'
        channel: critical
        throttled: false
        tag: 'testing123'

test_notify_all:
  alias: Test Notify All
  
  sequence:    
    - service: script.send_notification
      data:
        destination:
          - echo
          - persistent
          - mobile
        title: 'Test:'
        message: 'Testing 1 2 3'
        channel: standard
        throttled: false
        media_player_entity: media_player.everywhere
        notification_id: 'testing123'

#==============#
#     Fans     #
#==============#

test_fan_control:
  alias: Test Fan Control
  
  sequence:
    - service: script.turn_on
      entity_id: script.control_fan_for_temperature
      data:
        variables:
          fan_entity_id: fan.theater_fan
          temperature_entity_id: sensor.theater_temperature
          timeout: 0

test_exercise_reset:
  alias: Test Exercise Reset
  
  sequence:
    - service: input_boolean.turn_off
      target:
        entity_id:
          - input_boolean.treadmill_sun
          - input_boolean.workout_sun
