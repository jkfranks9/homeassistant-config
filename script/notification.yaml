#=======================#
#     Notifications     #
#=======================#

# Throttle mobile notifications so that only one per day is issued. This is accomplished by using
# a timer associated with the particular notification. We only proceed if the timer is idle. Then
# we start the timer with a duration that ends at 7 AM the next day.
#
# Note that we rely on timers being restored after a restart.
throttle_mobile_notification:
  alias: Throttle Mobile Notification
  mode: queued
  max: 10
  
  fields:
    timer_entity:
      description: 'The controlling timer entity used to throttle the notification.'
      example: 'timer.vacuum'
    title:
      description: 'The title of the message.'
      example: 'Warning:'
    message:
      description: 'The message to be issued.'
      example: 'This is only a test, do not be alarmed.'
    channel:
      description: 'The channel to which the notification is issued.'
      example: 'Home Assistant'
  
  sequence:
    
    # Wait a few seconds just in case, to be sure timers have been restored.
    - delay: '00:00:03'
    
    # Only continue if the input timer is idle.
    - condition: "{{ is_state(timer_entity, 'idle') }}"
    
    # Send the notification.
    - service: notify.mobile_app_jon_galaxy
      data:
        title: "{{ title }}"
        message: "{{ message }}"
        data:
          channel: "{{ channel }}"
    
    # Start the timer, using a duration that ends tomorrow at 7 AM.
    - service: timer.start
      data:
        entity_id: "{{ timer_entity }}"
        duration: >
          {% set next = now().today().replace(hour=7, minute=0, second=0, microsecond=0) + timedelta(days = 1) %}
          {{ (next - now().today().replace(microsecond=0)).seconds }}
